<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Mind Ramblings - SciRuby</title>
<link href="http://abinashmeher999.github.io/tag/SciRuby/index.xml" rel="self"/>
<link href="http://abinashmeher999.github.io/tag/SciRuby/index.html"/>
 <updated>2015-07-18T10:00:00+05:30</updated>
 <id>http://abinashmeher999.github.io/tag/SciRuby.html</id>
 <author>
 <name>Abinash Meher</name>
 </author>
 
 <entry>
   <title>Instantiating a Basic object</title>
   <link href="http://abinashmeher999.github.io/2015/06/25/Instantiating-a-Basic-object/"/>
   <updated>2015-06-25T00:00:00+05:30</updated>
   <id>http://abinashmeher999.github.io/2015/06/25/Instantiating-a-Basic-object</id>
   <content type="html">&lt;p&gt;Hi there! If you are following the blog, you would know how many errors I faced to setup and start writing the Ruby extensions. I don’t even remember half of the errors that I faced 2 weeks before. Well, that is why we have blog posts :P. We don’t want to miss a single takeaway from this experience.&lt;/p&gt;

&lt;p&gt;My PR in the symengine repo, &lt;a href=&quot;https://github.com/sympy/symengine/pull/414&quot;&gt;#414 Ruby file structure and Basic class&lt;/a&gt;, finally got merged!&lt;!--more--&gt; It was the most significant PR that I had got merged till now. 126 conversations! &lt;a href=&quot;https://github.com/certik&quot;&gt;Ondrej&lt;/a&gt;, &lt;a href=&quot;https://github.com/isuruf&quot;&gt;Isuru&lt;/a&gt; and &lt;a href=&quot;https://github.com/dilcom&quot;&gt;Ivan&lt;/a&gt; were the ones who helped me to solve them. If it weren’t for them, it would have taken me 2 more weeks to figure it out for myself. I can’t thank them enough. I would like to keep this post concise, so if you are curious about the errors you would like my previous posts under the tag &lt;a href=&quot;http://abinashmeher999.github.io/tag/GSoC-2015/&quot;&gt;GSoC-2015&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;setup-different-from-other-gems&quot;&gt;Setup different from other gems&lt;/h2&gt;
&lt;p&gt;The gem is different from other practices from other gems in a sense that our focus was to get rid of any dependencies that was not essential. Only the ones without which the extensions can’t be built. Like we got rid of &lt;code&gt;extconf.rb&lt;/code&gt; and hence the &lt;code&gt;mkmf&lt;/code&gt; module. The &lt;code&gt;Makefile&lt;/code&gt; is now generated by &lt;code&gt;cmake&lt;/code&gt;. Another one is &lt;code&gt;rake&lt;/code&gt; and the &lt;code&gt;Rakefile&lt;/code&gt;, tasks will be automated by the help of &lt;code&gt;python&lt;/code&gt; in the future. However, we still use &lt;code&gt;rdoc&lt;/code&gt; and &lt;code&gt;rspec&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;features-supported-now&quot;&gt;Features supported now&lt;/h2&gt;
&lt;p&gt;Currently, there is not much the extension supports. You can only instantiate a &lt;code&gt;Basic&lt;/code&gt; class. The gem has a module &lt;code&gt;SymEngine&lt;/code&gt;(It has a cool easter egg ;) too). The &lt;code&gt;Basic&lt;/code&gt; class is a part of the module. To make the object, do&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`symengine`&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SymEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Basic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;More features like making expressions out of symbols, by addition, subtraction, multiplication and division will be soon be introduced with the PR &lt;a href=&quot;https://github.com/sympy/symengine/pull/480&quot;&gt;#480 Support for Symbol in Ruby wrappers&lt;/a&gt;. After that, users can do things like&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;symengine&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SymEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&amp;lt;SymEngine::Symbol:0x00000002708328&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SymEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&amp;lt;SymEngine::Symbol:0x00000002700cb8&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SymEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&amp;lt;SymEngine::Symbol:0x000000026f78e8&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&amp;lt;SymEngine::Symbol:0x000000026eaa58&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;(x + y + z)**2&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&amp;lt;SymEngine::Symbol:0x000000026e2920&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2*x*y + 2*x*z + 2*y*z + x**2 + y**2 + z**2&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And not long after the PR is merged, I would have added the support for &lt;code&gt;Integer&lt;/code&gt; and &lt;code&gt;Rational&lt;/code&gt; classes.&lt;/p&gt;

&lt;p&gt;I would love to have your feedback. Please follow the instructions from &lt;a href=&quot;https://github.com/sympy/symengine/tree/master/symengine/ruby&quot;&gt;README&lt;/a&gt; to install the gem and give it a try. If you are interested to know about the future options that will be supported, you can go through my &lt;a href=&quot;https://github.com/abinashmeher999/sciruby/wiki/GSoC-2015-Abinash-Meher:-Ruby-bindings-for-CSymPy#timeline-tentative&quot;&gt;project proposal&lt;/a&gt; or browse through the current &lt;a href=&quot;https://github.com/sympy/symengine&quot;&gt;SymEngine&lt;/a&gt; codebase. The source code for the gem can be found &lt;a href=&quot;https://github.com/sympy/symengine/tree/master/symengine/ruby&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comments are always welcome :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Summer of Code 2015</title>
   <link href="http://abinashmeher999.github.io/2015/05/06/Google-Summer-of-Code-2015/"/>
   <updated>2015-05-06T00:00:00+05:30</updated>
   <id>http://abinashmeher999.github.io/2015/05/06/Google-Summer-of-Code-2015</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/gsoc/gsoc-2015.png&quot; alt=&quot;GSoC-2015&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hi there! Yeah, you guessed it. I got selected into Google Summer of Code 2015! I am very excited for the summers. The results have been out and My project &lt;strong&gt;Ruby Bindings for SymEngine C++ symbolic manipulation library&lt;/strong&gt; has been selected.&lt;!--more--&gt; I was selected by The Ruby Science Foundation but luckily I get to work with both SciRuby and SymPy! Isn’t that exciting?&lt;/p&gt;

&lt;p&gt;My mentor is Mr. Ondřej Čertík himslef, who is the founder of SymPy and I am lucky to be mentored by him. I would like to thank him and the Ruby Science Foundation and all the folks there to give me such an opportunity. John Woods and Carlos Agarie helped me a lot during the application period. I would also like to thank Harsh Gupta and Shivam Vats for introducing me to the community.&lt;/p&gt;

&lt;h2 id=&quot;the-project&quot;&gt;The Project&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ruby Bindings for SymEngine a symbolic manipulation library in C++&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
My project is to write the Ruby extensions for the C++ SymEngine library that provides functions for symbolic manipulation. This would also involve making the interface more rubyish than C++.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&quot;https://github.com/abinashmeher999/sciruby/wiki/GSoC-2015-Abinash-Meher:-Ruby-bindings-for-CSymPy&quot;&gt;project&lt;/a&gt; will set up a strong foundation for any symbolic manipulation library or “SymRuby” for that matter, to be built for Ruby in the future. SymEngine is fast and is very apt to start the work with. I have also come across GlucSym, which is an unpublished Ruby-to-GiNaC bridge from 2008.&lt;/p&gt;

&lt;p&gt;But this interface(my project) might be the impulse the Ruby community needed to have a fully functional symbolic manipulation library. After all Ruby is a Very High Level Language! It will soon be needing such libraries. For me, I would be glad if someone uses the library for her/his project!&lt;/p&gt;
</content>
 </entry>
 
</feed>
